install.packages("WGCNA")
install.packages("dynamictreecut");
install.packages("dynamicTreeCut");
install.packages("igraph");
install.packages("clValid");
getwd();
tut = /home/Documentos/Tesis/Tutorial-1
tut = "/home/Documentos/Tesis/Tutorial-1"
setwd("tut")
setwd(tut);
library("WGCNA")
library("WGCNA");
getwd()
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival") source("http://bioconductor.org/biocLite.R") biocLite(c("GO.db", "preprocessCore", "impute"))
install.packages("matrixStats")
install.packages("Hmisc")
install.packages("splines")
install.packages("reshape")
install.packages("survival")
biocLite(c("GO.db", "preprocessCore", "impute"))
install.packages("parallel")
install.packages("preprocessCore")
install.packages("GO.db")
install.packages("impute")
install.packages("AnnotationBbi")
install.packages("AnnotationDbi")
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute")
biocLite("preprocessCore")
source("http://bioconductor.org/biocLite.R")
biocLite("preprocessCore")
source("http://bioconductor.org/biocLite.R")
biocLite("parallel")
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
install.packages("WGCNA")
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(WGCNA)
source("http://www.bioconductor.org/biocLite.R")
biocLite("WGCNA")
help()
help
help()
lybrary(hclut)
lybrary(hclust)
library(hclust)
install.package("hclust")
install.packages("hclust")
source("http://www.bioconductor.org/biocLite.R")
biocLite("hclust")
source("http://www.bioconductor.org/biocLite.R")
biocLite("clValid")
source("http://www.bioconductor.org/biocLite.R")
biocLite("cluster")
library("WGCNA")
source("http://www.bioconductor.org/biocLite.R")
biocLite("WGCNA")
library("WGCNA")
library(WGCNA)
version
g <- read.graph("karate.paj", format="pajek");
#g <- graph( c(1,2,2,3,3,4,5,6), directed=FALSE )
#g <- graph.lattice(c(2,1,3))
#g <- graph.full(5, loops=FALSE)
nedges <- ecount(g)
edges <- get.edges(g,E(g))
s<- matrix(data=0,nrow=nedges,ncol=nedges);
for (i in 1:nedges){
a <- neighborhood(g,order=1, nodes=i)[[1]]
b <- neighborhood(g,order=1, nodes=j)[[1]]
s[i,j]= length(intersect(a, b))/length(union(a,b));
}
dendro <- hclust(as.dist(s));
dynamic = cutreeDynamic(dendro=dendro,distM=s,method="hybrid",pamStage=TRUE)
valid <- silhouette(dynamic,s)
library(igraph)
library(WGCNA)
library(cluster)
g <- read.graph("karate.paj", format="pajek");
#g <- graph( c(1,2,2,3,3,4,5,6), directed=FALSE )
#g <- graph.lattice(c(2,1,3))
#g <- graph.full(5, loops=FALSE)
nedges <- ecount(g)
edges <- get.edges(g,E(g))
s<- matrix(data=0,nrow=nedges,ncol=nedges);
for (i in 1:nedges){
a <- neighborhood(g,order=1, nodes=i)[[1]]
b <- neighborhood(g,order=1, nodes=j)[[1]]
s[i,j]= length(intersect(a, b))/length(union(a,b));
}
dendro <- hclust(as.dist(s));
dynamic = cutreeDynamic(dendro=dendro,distM=s,method="hybrid",pamStage=TRUE)
valid <- silhouette(dynamic,s)
library(igraph)
library(WGCNA)
library(cluster)
g <-read.graph("dolphins.paj", format="pajek");
g <-read.graph("dolphins.paj", format="pajek");
setwd("~/tesis-pruebas/networks")
g <-read.graph("dolphins.paj", format="pajek");
nedges <- ecount(g)
edges <- get.edges(g,E(g))
View(edges)
edges(1,)
edges(,1)
edges(1)
as.matrix(edges)
medges<-as.matrix(edges)
medges(1,)
medges
medges(1,)
medges[1,]
medges[1,1]
medges[1,2]
